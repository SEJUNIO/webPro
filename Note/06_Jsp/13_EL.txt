[EL] 표현식 또는 액션태그를 대신해서 값을 표현
액션 태그를 조금 다르게(간략하게) 표현한 것.

[EL연산자]
산술 : + - * / %
관계 : ==(eq) !=(ne) <(lt) >(gt) <= >=
조건 : a? b : c
논리 :  && ||
${ empty  값} :  공백이거나  null일때 true 
${ not empty  값} :  공백이거나 null이 아닐때 true
[EL 표기법]
	산술연산 : 10+1 = ${10+1 } <br>
	산술연산 : 10/0 = ${10/0 } <br>
	관계연산 : 1 > 2 = ${ 1 gt 2 }<br>
	관계연산 : 1 > 2 = ${ 1 > 2 }<br> 
	관계연산 : 1 &lt; 2 = ${ 1 lt 2 }<br>
	관계연산 : 1 &lt; 2 = ${ 1 < 2 }<br>
	관계연산 : 1 == 2 = ${ 1 eq 2 } <br>
	관계연산 : 1 == 2 = ${ 1 == 2 } <br>
	논리연산 : (1>2) || (1&lt;2) = ${(1 gt 2) || (1 lt 2) }<br>
	삼항연산 : ${( 1 > 2) ? "1>2입니다" : "1>2가 아닙니다" }<br>
	로그인여부 : ${empty validMember ? "로그인전":"로그인후"}
	로그인여부 : ${not empty validMember? "로그인후":"로그인전" }<br>
	파라미터 : ${not empty param.pageNum ? "pageNum 넘어옴" : "pageNum 안넘어옴"}

[내장 객체]
[Scope에 관한 객체]
pageScope : page객체의 attributte를 참조하는 객체(page attribute의 집합) Map 타입
requestScope : request객체의 attribute를 참조하는 객체(rquest attribute의 집합) Map 타입
sessionScope : session객체의 attribute를 참조하는 객체(session attribute의 집합) Map 타입
applicationScope : application객체의 attribute를 참조하는 객체(application attribute의 집합) Map 타입

[그 외 유용한 객체]
param : 요청 파라미터를 참조하는 객제(웹 브라우저로부터 입력된 데이터의 집합) Map 타입
paramValues : 요청 파라미터(배열)를 참조하는 객제(웹 브라우저로부터 입력된 데이터의 집합-똑 같은 이름의 데이터가 여럿일 때 사용) Map 타입
initParam : 초기화 파라미터를 참조하는 객체(웹 어플리케이션의 초기화 파라미터의 집합) Map 타입
cookie : cookie객체를 참조하는 객체(웹 브라우저로부터 전송된 쿠키의 집합)