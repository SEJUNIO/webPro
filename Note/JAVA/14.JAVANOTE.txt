[예외처리]

예외는 ?
문제 없을 것 같은 프로그램도 외부환경요인 등에 의해 문제가 발생하곤 합니다.
프로그램에서 문제가 발생될 만한 곳을 예상하여 사전에 "문제가 발생하면 이렇게 해라"처럼 프로그래밍 하는 것을 예외 처리라고 합니다.

[문법에러]
문법적으로 나타나는 에러
[실행에러]
-논리에러 = 프로그래머가 잘못 작성해서 이상한 결과가 나오는 경우
-시스템에러 = 프로그래머의 의지와 상관없이 나타나는 에러
-예외사항 = 정상적으로 프로그램이 동작하는 과정에서 나타는 에러

[예외처리가 필요한 이유]
예외의 필요성은 어느 한 부분에서 예외가 발생하더라도 계속해서 프로그램이 동작되도록 하는데 목적이 있습니다. 
어떤 문제가 하나 발생되었다고 그 프로세스가 완전히 정지되어 시스템을 재가동하기 전까지는 구동을 아예 못한다고 한다면 너무 많은 손실이 클 것입니다. 
그래서 사소한 문제 같은 경우에는 그 문제를 우회해서 가는 방법으로 프로세스가 죽지 않고 계속 구동하도록 프로그래밍하는 방법이 필요합니다

try ~ catch 문법

try {
	try 블럭 : 익셉션이 발생할 가능성이 있는 명령문들(문제가 발생할 수 있는 로직을 기술)
}catch (익셉션타입 익셉션변수) {
	그 익셉션을 처리하는 명령문(try블록안에서 문제가 발생했을 때 대처방안 기술);
}finally {
	익셉션 발생 여부와 상관없이 맨 마지막에 실행할 명령문;
}

- 자바는 예외를 객체로 취급.-
	IOException
	ClassNotFoundException
	RuntimeException
	ArithmeticException
	ClassCaseException
	NullPointerException
	IndexOutOfBoundsException

catch 문에 예외처리를 여러 개 할 수도 있다.

예외처리 문법(throws)
throws의 경우에는 나를 호출한(실행시키는) 쪽으로 예외를 던져버리는 방식 입니다

일반적으로 많이 보게 되는 예외들
ArrayIndexOutOfBoundsException > 배열을 사용시 존재하지 않는 index값을 호출하면 발생 합니다
NullPointerException > 존재하지 않는 객체를 가리킬 때 발생 합니다
NumberFormatException > 숫자로 변경할 수 없는 문자열을 변경하려고 함

DB 관련 Exception
ClassNotFoundException : 드라이브 이름을 찾지 못했을 때
SQLException : db url, id, pw가 올바르지 않을 때
