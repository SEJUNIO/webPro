[패턴]
개발자가 객체지향 언어의 장점들을 모아 가장 효율적으로 개발을 할 수 있게 만든 프레임이다.
[패턴의 종류]
1.싱글톤 패턴 (singleTon) 
어떤 클래스의 객체는 오직 하나인 유일한 객체를 만들어 여러가지 상황에 동일한 객체에 접근하기 위해 만들어진 패턴
싱글톤 패턴에 따르는 클래스는 생성자가 여러 차례 호출 되더라도 실제로 생성되는 것은 하나이다
이 객체에 접근할 수 있는 전역적인 접촉점을 제공하는 패턴이기도 하다.

2.스트레티지 패턴 (Strategy)
기능 하나를 정의 하고 각각을 캡슐화하여 교환해서 사용할 수 있도록 만든다.
어떤 객체를 만들 때 객체가 가지는 기능들이 다양하게 존재할 것입니다. 
이러한 기능들을 추상화하여 언제든지 적용할 수 있게 만드는 것입니다. 
즉 기능을 부품화, 표준화 하는 것입니다