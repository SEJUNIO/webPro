[VIEW]
행과 컬럼으로 구성된 가상 테이블 (이미 존재하고 있는 테이블에 제한적으로 접근하기 위함)
물리적인 저장공간과 데이터를 가지지 않고 다른 테이블이나 뷰에서 파생된 논리적인 테이블 ( 기본테이블의 데이터가 반영되면 뷰에도 반영)
[VIEW장점]
뷰를 이용해 기본 테이블의 액세스 제한을 통하여 데이터 보안 기능을 제공 (기본 테이블 영항주지 않음)
간단하게표현가능
[VIEW 종류]
단순뷰 - 하나의 테이블로 구성한 뷰 (INSERT, DELETE, UPDATE와 같은 DML 명령문을 실행해 기본 테이블의 데이터 조작 가능
복합뷰 - 하나 이상의 기본 데이터로 구성한 뷰, DML문을 제한적으로 사용
[VIEW의 제한 조건]
테이블에 NOT NULL로 만든 컬럼들이 뷰에 다 포함되어 있어야함
[VIEW 생성 문법]
CREATE OR REPLACE VIEW_NAME 
	AS (SUBQUERY)
[WITH CHECK OPTION]
[WITH READ ONLY]
	WITH CHECK OPTION : INSERT나 UPDATE시 서브쿼리의 조건을 만족할 경우에 처리, 딜리트 가능
	WITH READ ONLY : 읽기 전용 뷰 생성.

[INLINE VIEW]
SQL문장 내 서브쿼리는 SELECT절에도, FROM절에도 WHERE절에도 어디든 사용가능
FROM절 상의 서브쿼리를 INLINE VIEW라 하며, FROM절에 오는 서브쿼리는 VIEW 처럼 작용.
문법 : SELECT COLUMN_LIST
	FROM (SUBQUERY) ALIAS
	WHERE CONDITION
-- 뷰의 수정 
ALTER VIEW 사용은 뷰의 수정보다 재컴파일하거나 유효성을 재검사하기 위해 사용되고 CREATE OR REPLACE VIEW 명령문을 이용한다.

[TOP-N]
TOP-N은 컬럼의 값 중 N개의 가장 큰 값 또는 작은 값을 기준으로 정의
[문법]
SELECT [column_list] ROWNUM  -- ROWNUM은 테이블에서 읽어오는 순서
FROM
(SELECT [column_list] FROM table 
ORDER BY TOP-N_column)
WHERE ROWNUM <= N;

-- 데이터를 정렬하는 질의를 서브쿼리나 INLINE뷰로 생성
