[Join]
두개 이상의 테이블을 연결하여 데이터를 검색하는 방법

Join의 필요성
특성부서번호에 대한 부서이름은 dept테이블에 있고 특정 사원에 대한 부서명을 알아내기 위해선 
부서 테이블에서 정보를 얻어와야 한다, join을 하지않으면 두 sql문을 통해 알아내기 번거로움이 있다.

[Cross Join]
특별한 키워드 없이 다음과 같이 from절에 두 개 이상의 테이블을 기술하는 것 
	SELECT * FROM EMP,DEPT; 
CrossJoin의 결과를 보면 사원 테이블에 부서에 대한 상세정보가 결합되긴 했지만, 조인 될 때 아무런 조건을 
제시하지 않았기에 사원 한명에 대해서 dept테이블의 4개의 로우와 결합된 형태이기에 CrossJoin의 결과는 아무런 의미가 없다.

[Equi Join]
EQUI JOIN은 가장 많이 사용하는 조인 방법으로서
조인 대상이 되는 두 테이블에서 공통적으로 존재하는 컬럼의 값이 일치되는 행을 연결하여 결과를 생성하는 조인 방법 
ex ). SELECT * FROM EMP, DEPT WHERE EMP.DEPTNO = DEPT.DEPTNO;
사원 테이블과 부서 테이블의 공통 컬럼인 DEPTNO의 값이 일치되는 조건을 WHERE절에 기술하여 사용
테이블을 조인하려면 일치되는 공통 컬럼을 사용해야 하고 컬럼의 이름이 같게 되면 혼동이 올 수 있다.

[Non-Equi Join]
Non-Equi Join은 조인 조건에 특정 범위 내에 있는지를 조사하기 위해서 WHERE 절에 조인 조건을 = 연산자
이외의 비교 연산자를 사용합니다. Non-Equi Join을 학습하기 전에 급여 등급 테이블(SALGRADE )을 확인하자.


