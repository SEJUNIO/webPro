[컴포넌트]
컴포넌트를 정의하는 가장 간단한 방법은 JavaScript 함수를 작성하는 것입니다.
import './App.css';
import React, {component} from 'react';

[props]
사용자 입장에 component를 사용할 때 필요한 데이터
읽기전용.함수 컴포넌트나 클래스 컴포넌트 모두 컴포넌트의 자체 props를 수정해서는 안 됩니다.

[state 와 key]
props값에 따라 내부에서 구현에 필요한 데이터.

[key]
Key는 React가 어떤 항목을 변경, 추가 또는 삭제할지 식별하는 것을 돕습니다. 
key는 엘리먼트에 안정적인 고유성을 부여하기 위해 배열 내부의 엘리먼트에 지정해야 합니다.

Key는 배열 안에서 형제 사이에서 고유해야 하고 전체 범위에서 고유할 필요는 없습니다. 두 개의 다른 배열을 만들 때 동일한 key를 사용할 수 있습니다.

[CRUD]
CREATE, READ, UPDATE, DELETE 용어.
[Create form ui]
클래스를 이용하여 constructor변수를 지정하여 props값을 받고
state를 이용하여 받아 . contents 배열을 받는다.

﻿TOC에 뿌려질 this.state.contents가 바뀌지 않으면 TOC는 다시 render하지 않도록 업그레이드(shouldComponentUpdate 함수 이용) : 조그만 app의 경우 push나 concat의 차이를 느끼지 못할 수 있음.
그러나 app을 확장할 경우도 있으므로 push(원본수정)보다 concat(복제본 수정)을 사용 추천

[﻿Update 구현 : Read 기능과 Create 기능 결합]