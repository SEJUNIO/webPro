[객체]
﻿var array = [‘사과’, ‘바나나’, ‘망고’,’딸기’]; /* 여러가지 변수를 모아놓은 자료형 typeof() 이용시 object

[속성과 매서드]
배열 내부에 있는 값을 요소. 객체 내부에 있는 값은 속성 . 자바스크립트에서는 요소와 속성을 구분치 않고 사용
객체 속성중 함수형 자료형인 속성을 특별히 매서드 라고 부름/

[객체와 반복문]
배열은 단순 for반복문과 for in 반복문으로 요소에 쉽게 접근. 객체는 단순for문은 불가, for in반복문을 사용
예시 /////
﻿// 변수를 선언합니다.
        var product = {
            name: 'Microsoft Visual Studio 2012 Ultimate',
            price: '15,000,000원',
            language: '한국어',
            supportOS: 'Win 32/64',
            subscription: true
        };
﻿// 출력합니다.
        var output = '';
        for (var key in product) {
            output += '●' + key + ': ' + product[key] + '\n';
        }
  alert(output);

[객체 관련 키워드]

[in]
in키워드를 for키워드와 별도로 사용하면 해당 키가 객체 안에 있는지 확인할 수있다.

[with]
'with키워드를 사용하여 아래 예시처럼 간결하게 구현 가능하다.
﻿<script>
        var student = {
            name: '홍길동',
            kor: 92, mat: 98, eng: 96, sci: 98
        };
        var output = '';
        with (student) {
            output += 'name : ' + name + '\n';
            output += 'kor : ' + kor + '\n';
            output += 'mat: ' + mat + '\n';
            output += 'eng: ' + eng + '\n';
            output += 'sci: ' + sci + '\n';
        }
        alert(output);
document.write('<h2>'+output.replaceAll('\n', '</h2><h2>'));
    function replaceAll(str, searchStr, replaceStr) {
      return str.splite(searchStr).join(replaceStr);
    }
    </script>

[속성추가]

﻿ // toString() 메서드를 만듭니다.
        student.toString = function () {
            var output = '';
            for (var key in this) {
                // toString() 메서드는 출력하지 않게 합니다.
                if (key != 'toString') {
                    output += key + '\t' + this[key] + '\n';
                }
            }
            return output;
        };

[속성제거 delete]
delete를 사용합니다.!

